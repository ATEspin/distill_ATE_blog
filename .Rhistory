type2 == FALSE~paste0(sample(letters, 5, replace = T), collapse = ""),
TRUE~name
))
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.02)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
cluster_names<-read.csv("tfidf_df_sum_f2.csv", na.strings = "")%>%
mutate(clust_level2 = ifelse(is.na(clust_level2), clust_name, clust_level2))%>%
group_by(clust)%>%
summarise(clust_name = unique(clust_name),
clust_level2 = unique(clust_level2))
pubs_df_clustering$clust <- cutree(hc, 60)
pubs_df_clustering2<-pubs_df_clustering%>%
left_join(cluster_names%>%
select(clust, clust_level2))%>%
filter(!is.na(clust_level2))
pubs_df_clustering2$name<-str_trim(pubs_df_clustering2$name)
net_df<-pubs_df_clustering2%>%
select(name, clust_level2)
g<-graph_from_data_frame(net_df, directed = F)
#bipartite.mapping(g)
V(g)$type <- bipartite_mapping(g)$type
V(g)$size <- degree(g)
g<-simplify(g)
gg_net<-ggnetwork(g, layout = igraph::layout.fruchterman.reingold(g))
gg_net<-gg_net%>%
mutate(type2 = case_when(
name == "Abel Torres Espin"~"me",
type == FALSE~"name",
type == TRUE~"cluster"
),
size2 = ifelse(type == FALSE, 1, 1.1),
line_size = ifelse(type2 == "me", 0.15, 0.1))%>%
group_by(name)%>%
mutate(name = case_when(
type == FALSE~paste0(sample(letters, 5, replace = T), collapse = ""),
TRUE~name
))
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.02)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.02)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank(base_size = 12)+
theme(legend.position = "none")
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.02)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank(base_size = 14)+
theme(legend.position = "none")
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.02)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank(base_size = 16)+
theme(legend.position = "none")
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.02,label.size = 10)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.02,label.size = 1)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.02,label.size = 0)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.02,size = 10)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.02,size = 1)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.02,size = 3)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.02,size = 4)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.02,size = 5)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.02,size = 6)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.02,size = 3)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
set.seed(123)
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.02,size = 3)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
set.seed(123)
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.04,size = 3)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1, linewidth = 1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.04,size = 3)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1, linewidth = 0.1) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.04,size = 3)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1, linewidth = 0.2) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.04,size = 3)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
set.seed(123)
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1, linewidth = 0.2) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.04,size = 3)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
g<-graph_from_data_frame(net_df, directed = F)
V(g)$type <- bipartite_mapping(g)$type
V(g)$size <- degree(g)
g<-simplify(g)
plot(g)
gg_net<-ggnetwork(g,
#layout = igraph::layout.fruchterman.reingold(g)
)
gg_net<-gg_net%>%
mutate(type2 = case_when(
name == "Abel Torres Espin"~"me",
type == FALSE~"name",
type == TRUE~"cluster"
),
size2 = ifelse(type == FALSE, 1, 1.1),
line_size = ifelse(type2 == "me", 0.15, 0.1))%>%
group_by(name)%>%
mutate(name = case_when(
type == FALSE~paste0(sample(letters, 5, replace = T), collapse = ""),
TRUE~name
))
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1, linewidth = 0.2) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.04,size = 3)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
gg_net<-ggnetwork(g,
layout = igraph::layout.bipartite(g)
)
gg_net<-ggnetwork(g,
layout = igraph::layout_as_bipartite(g)
)
gg_net<-gg_net%>%
mutate(type2 = case_when(
name == "Abel Torres Espin"~"me",
type == FALSE~"name",
type == TRUE~"cluster"
),
size2 = ifelse(type == FALSE, 1, 1.1),
line_size = ifelse(type2 == "me", 0.15, 0.1))%>%
group_by(name)%>%
mutate(name = case_when(
type == FALSE~paste0(sample(letters, 5, replace = T), collapse = ""),
TRUE~name
))
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1, linewidth = 0.2) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.04,size = 3)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
set.seed(123)
cluster_names<-read.csv("tfidf_df_sum_f2.csv", na.strings = "")%>%
mutate(clust_level2 = ifelse(is.na(clust_level2), clust_name, clust_level2))%>%
group_by(clust)%>%
summarise(clust_name = unique(clust_name),
clust_level2 = unique(clust_level2))
pubs_df_clustering$clust <- cutree(hc, 60)
pubs_df_clustering2<-pubs_df_clustering%>%
left_join(cluster_names%>%
select(clust, clust_level2))%>%
filter(!is.na(clust_level2))
pubs_df_clustering2$name<-str_trim(pubs_df_clustering2$name)
net_df<-pubs_df_clustering2%>%
select(name, clust_level2)
g<-graph_from_data_frame(net_df, directed = F)
#bipartite.mapping(g)
V(g)$type <- bipartite_mapping(g)$type
V(g)$size <- degree(g)
g<-simplify(g)
gg_net<-ggnetwork(g)
gg_net<-gg_net%>%
mutate(type2 = case_when(
name == "Abel Torres Espin"~"me",
type == FALSE~"name",
type == TRUE~"cluster"
),
size2 = ifelse(type == FALSE, 1, 1.1),
line_size = ifelse(type2 == "me", 0.15, 0.1))%>%
group_by(name)%>%
mutate(name = case_when(
type == FALSE~paste0(sample(letters, 5, replace = T), collapse = ""),
TRUE~name
))
ggplot(gg_net, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(color = type2), alpha=0.4,
curvature = 0.1, linewidth = 0.2) +
geom_nodes(aes(color = type2, shape = type2))+
geom_nodelabel_repel(aes(label = name, fill = type2),
show.legend = F, force = 0.04,size = 3)+
scale_color_manual(values = c("grey","green3", "grey"))+
scale_fill_manual(values = c("lightpink2", "green3", "steelblue1"))+
theme_blank()+
theme(legend.position = "none")
# Load required libraries
library(lme4)
library(tidyverse)
# Simulate the data
set.seed(123)
# Parameters
n_nodes <- 5
n_time <- 3
n_total <- n_nodes * n_time
# Simulate network structure (adjacency matrix)
network <- matrix(c(
0, 1, 1, 0, 1,
1, 0, 1, 1, 0,
1, 1, 0, 1, 1,
0, 1, 1, 0, 1,
1, 0, 1, 1, 0
), nrow = n_nodes, byrow = TRUE)
# Create a dataframe for the time-series data
data <- expand.grid(node = 1:n_nodes, time = 1:n_time)
data <- data %>%
arrange(node, time) %>%
mutate(
group = rep(1:2, each = n_nodes / 2), # Group-level (L2)
X = rnorm(n_total, 0, 1),            # Node-specific predictor
L3 = sample(c(0, 1), n_total, replace = TRUE) # Network-level covariate
)
rep(1:2, each = n_nodes / 2)
n_nodes
n_nodes*2
data <- data %>%
arrange(node, time) %>%
mutate(
group = rep(1:3, each = n_nodes*2), # Group-level (L2)
X = rnorm(n_total, 0, 1),            # Node-specific predictor
L3 = sample(c(0, 1), n_total, replace = TRUE) # Network-level covariate
)
data <- data %>%
arrange(node, time) %>%
mutate(
group = rep(1:3, each = n_nodes), # Group-level (L2)
X = rnorm(n_total, 0, 1),            # Node-specific predictor
L3 = sample(c(0, 1), n_total, replace = TRUE) # Network-level covariate
)
data
# Simulate outcomes (Y)
data <- data %>%
group_by(node) %>%
mutate(
Y_lag = lag(X, 1, order_by = time),  # Lagged outcome for autoregression
Y = 2 + 0.5 * X + 0.3 * group + 0.2 * L3 + 0.6 * Y_lag + rnorm(n(), 0, 1)
) %>%
ungroup()
data
# Replace missing lag values with random noise for t=1
data$Y_lag[is.na(data$Y_lag)] <- rnorm(sum(is.na(data$Y_lag)), 0, 1)
data
# Incorporate network influence (average outcome of connected nodes)
data <- data %>%
group_by(time) %>%
mutate(
network_influence = rowMeans(sapply(1:n_nodes, function(i) {
row <- which(data$node == i & data$time == unique(time))
mean(data$Y[row[network[i, ] == 1]])
}, simplify = "matrix"), na.rm = TRUE)
) %>%
ungroup()
# Fit the multilevel model
model <- lmer(
Y ~ X + group + L3 + Y_lag + network_influence + (1 | node) + (1 | group),
data = data
)
data
# Incorporate network influence (average outcome of connected nodes)
data <- data %>%
group_by(time) %>%
mutate(
network_influence = rowMeans(sapply(1:n_nodes, function(i) {
row <- which(data$node == i & data$time == unique(time))
mean(data$Y[row[network[i, ] == 1]])
}, simplify = "matrix"), na.rm = TRUE)
) %>%
ungroup()
sapply(1:n_nodes, function(i) {
row <- which(data$node == i & data$time == unique(time))
mean(data$Y[row[network[i, ] == 1]])
}
)
rowMeans(sapply(1:n_nodes, function(i) {
row <- which(data$node == i & data$time == unique(time))
mean(data$Y[row[network[i, ] == 1]])
}, simplify = "matrix"), na.rm = TRUE)
# Fit the multilevel model
model <- lmer(
Y ~ X + group + L3 + Y_lag  + (1 | node) + (1 | group),
data = data
)
# Summary of the model
summary(model)
# Visualize results
library(ggplot2)
ggplot(data, aes(x = time, y = Y, group = node, color = as.factor(node))) +
geom_line() +
labs(title = "Network Nodes' Outcomes Over Time", x = "Time", y = "Outcome (Y)") +
theme_minimal()
# Create a dataframe for the time-series data
data <- expand.grid(node = 1:n_nodes, time = 1:n_time)
data <- data %>%
arrange(node, time) %>%
mutate(
group = rep(1:3, each = n_nodes), # Group-level (L2)
X = rnorm(n_total, 0, 1),            # Node-specific predictor
L3 = sample(c(0, 1), n_total, replace = TRUE) # Network-level covariate
)
# Simulate outcomes (Y)
data <- data %>%
group_by(node) %>%
mutate(
Y_lag = lag(X, 1, order_by = time),  # Lagged outcome for autoregression
Y = 2 + 0.5 * X + 0.3 * group + 0.2 * L3 + 0.6 * Y_lag + rnorm(n(), 0, 1)
) %>%
ungroup()
# Create a dataframe for the time-series data
data <- expand.grid(node = 1:n_nodes, time = 1:n_time)
data <- data %>%
arrange(node, time) %>%
mutate(
group = rep(1:3, each = n_nodes), # Group-level (L2)
X = rnorm(n_total, 0, 1),            # Node-specific predictor
L3 = sample(c(0, 1), n_total, replace = TRUE) # Network-level covariate
)
data
# Simulate outcomes (Y)
data <- data %>%
group_by(node) %>%
mutate(
Y_lag = lag(X, 1, order_by = time),  # Lagged outcome for autoregression
#Y = 2 + 0.5 * X + 0.3 * group + 0.2 * L3 + 0.6 * Y_lag + rnorm(n(), 0, 1)
) %>%
ungroup()
data
# Replace missing lag values with random noise for t=1
data$Y_lag[is.na(data$Y_lag)] <- rnorm(sum(is.na(data$Y_lag)), 0, 1)
data
data <- data %>%
group_by(node) %>%
mutate(
Y = 2 + 0.5 * X + 0.3 * group + 0.2 * L3 + 0.6 * Y_lag + rnorm(n(), 0, 1)
) %>%
ungroup()
data
# Fit the multilevel model
model <- lmer(
Y ~ X + group + L3 + Y_lag  + (1 | node) + (1 | group),
data = data
)
# Summary of the model
summary(model)
ggplot(data, aes(x = time, y = Y, group = node, color = as.factor(node))) +
geom_line() +
labs(title = "Network Nodes' Outcomes Over Time", x = "Time", y = "Outcome (Y)") +
theme_minimal()
